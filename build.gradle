plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.openapi.generator" version "6.2.0"
}

group = 'com.evaluation'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		java {
			srcDir layout.buildDirectory.dir("generated/src/main/java")
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.springdoc:springdoc-openapi-ui:1.5.9"
	implementation "javax.servlet:javax.servlet-api:4.0.1"
	implementation "javax.validation:validation-api:2.0.1.Final"
	implementation "javax.annotation:javax.annotation-api:1.3.2"
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "${projectDir}/src/main/resources/openapi.yaml"
	outputDir = layout.buildDirectory.dir("generated").get().toString()
	apiPackage = "com.evaluation.gft.adapters.in.api"
	modelPackage = "com.evaluation.gft.adapters.in.api"
	invokerPackage = "com.evaluation.gft.invoker"
	configOptions = [
			dateLibrary : "java22",
			openApiNullable: "false"
	]
}

tasks.withType(JavaCompile) {
	dependsOn tasks.named("openApiGenerate")
	source = fileTree("${buildDir}/generated/src/main/java")
}

tasks.named('test') {
	useJUnitPlatform()
}

