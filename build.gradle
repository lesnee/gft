plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.openapi.generator" version "7.8.0"
}

group = 'com.evaluation'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Annotation and validations dependencies for OpenAPI
	implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.22'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.8.0'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.17.0'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "${projectDir}/src/main/resources/openapi.yaml".toString()
	outputDir = "${buildDir}/generated"
	apiPackage = "com.evaluation.gft.adapters.in.api"
	modelPackage = "com.evaluation.gft.adapters.in.api.model"
	configOptions = [
			dateLibrary: "java8-localdatetime", // To use Java 8 date/time types (JSR310) for date-time fields (LocalDateTime in this case)
			interfaceOnly: "true",
			openApiNullable: "false",
			skipDefaultInterface: "true",
			useJakartaEe: "true", // To use Jakarta EE annotations instead of javax
			useTags: "true",      // To use tags in the generated code
	]
}



sourceSets {
	main {
		java {
			srcDir "${buildDir}/generated/src/main/java"
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
	useJUnitPlatform()
}
